Introduction

SkillCourt is currently on version 4.0, previous versions included a lot of different functionality. However, due to limitations of previous versions as well as with the thought of new ideas, alterations to the older versions had to be developed. The fact is that it is much better to move from a decentralized to a more centralized system.  
Current System

SkillCourt 3.0 is based around Processing IDE. The system operates through a single connected pad which communicates serially through USB. For operation to occur, events are generated by the software and translated into serial commands.

The pads which communicate which SkillCourt 3.0 come in two varieties: Master and Slave. The master pad has a bluetooth sensor which communicates with the Android application. The android application is the one that initiates the events followed. Because of this, bluetooth, android and a computer are required to operate. 

The system uses force sensors to detect when the pad has been interacted with and for the ball to bounce off it. Pads are small, and not physically tough enough to actually kick yet. It is limited as well in the fact that only one pad is usable as well that the way it is designed, the local system is difficult to secure.


Purpose of New System

SkillCourt 4.0 is a movement in a different direction. It replaces the current system for a java standard that can be ran in any type of IDE. The porting to the new version allows for the creation of a new way of handling SkillCourt into a more concrete standard. Functionality can now be expanded through the use of Java libraries. As seen with OpenGL and XML type outputs.

Additionally, the original version as modified to the point where multiple pads can now be simultaneously connected as well as the creation of an iOS app for a wider audience. An XML sequence standard was also developed for future versions to use. 
